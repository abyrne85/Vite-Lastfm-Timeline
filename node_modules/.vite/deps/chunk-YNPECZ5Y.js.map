{
  "version": 3,
  "sources": ["../../chart.js/src/helpers/helpers.core.ts", "../../chart.js/src/helpers/helpers.math.ts", "../../chart.js/src/helpers/helpers.collection.ts", "../../chart.js/src/helpers/helpers.extras.ts", "../../chart.js/src/helpers/helpers.easing.ts", "../../chart.js/node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js", "../../chart.js/src/helpers/helpers.color.ts", "../../chart.js/src/core/core.animations.defaults.js", "../../chart.js/src/core/core.layouts.defaults.js", "../../chart.js/src/helpers/helpers.intl.ts", "../../chart.js/src/core/core.ticks.js", "../../chart.js/src/core/core.scale.defaults.js", "../../chart.js/src/core/core.defaults.js", "../../chart.js/src/helpers/helpers.canvas.js", "../../chart.js/src/helpers/helpers.options.ts", "../../chart.js/src/helpers/helpers.config.js", "../../chart.js/src/helpers/helpers.curve.ts", "../../chart.js/src/helpers/helpers.dom.ts", "../../chart.js/src/helpers/helpers.interpolation.ts", "../../chart.js/src/helpers/helpers.rtl.ts", "../../chart.js/src/helpers/helpers.segment.js", "../../chart.js/src/core/core.animator.js", "../../chart.js/src/core/core.animation.js", "../../chart.js/src/core/core.animations.js", "../../chart.js/src/core/core.datasetController.js", "../../chart.js/src/controllers/controller.bar.js", "../../chart.js/src/controllers/controller.bubble.js", "../../chart.js/src/controllers/controller.doughnut.js", "../../chart.js/src/controllers/controller.line.js", "../../chart.js/src/controllers/controller.polarArea.js", "../../chart.js/src/controllers/controller.pie.js", "../../chart.js/src/controllers/controller.radar.js", "../../chart.js/src/controllers/controller.scatter.js", "../../chart.js/src/core/core.adapters.ts", "../../chart.js/src/core/core.interaction.js", "../../chart.js/src/core/core.layouts.js", "../../chart.js/src/platform/platform.base.js", "../../chart.js/src/platform/platform.basic.js", "../../chart.js/src/platform/platform.dom.js", "../../chart.js/src/platform/index.js", "../../chart.js/src/core/core.element.ts", "../../chart.js/src/core/core.scale.autoskip.js", "../../chart.js/src/core/core.scale.js", "../../chart.js/src/core/core.typedRegistry.js", "../../chart.js/src/core/core.registry.js", "../../chart.js/src/core/core.plugins.js", "../../chart.js/src/core/core.config.js", "../../chart.js/src/core/core.controller.js", "../../chart.js/src/elements/element.arc.ts", "../../chart.js/src/elements/element.line.js", "../../chart.js/src/elements/element.point.ts", "../../chart.js/src/elements/element.bar.js", "../../chart.js/src/plugins/plugin.colors.ts", "../../chart.js/src/plugins/plugin.decimation.js", "../../chart.js/src/plugins/plugin.filler/filler.segment.js", "../../chart.js/src/plugins/plugin.filler/filler.helper.js", "../../chart.js/src/plugins/plugin.filler/filler.options.js", "../../chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../chart.js/src/plugins/plugin.filler/simpleArc.js", "../../chart.js/src/plugins/plugin.filler/filler.target.js", "../../chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../chart.js/src/plugins/plugin.filler/index.js", "../../chart.js/src/plugins/plugin.legend.js", "../../chart.js/src/plugins/plugin.title.js", "../../chart.js/src/plugins/plugin.subtitle.js", "../../chart.js/src/plugins/plugin.tooltip.js", "../../chart.js/src/scales/scale.category.js", "../../chart.js/src/scales/scale.linearbase.js", "../../chart.js/src/scales/scale.linear.js", "../../chart.js/src/scales/scale.logarithmic.js", "../../chart.js/src/scales/scale.radialLinear.js", "../../chart.js/src/scales/scale.time.js", "../../chart.js/src/scales/scale.timeseries.js", "../../chart.js/src/index.ts"],
  "sourcesContent": ["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import {type ChartMeta, type PointElement} from '../../types';\n\nimport {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply<any, TArgs, void>(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {Point, toFontString} from './helpers.canvas';\nimport type {ChartArea, FontSpec} from '../../types';\nimport type {TRBL, TRBLCorners} from '../../types/geometric';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<P extends T, T extends object>(parentContext: P, context: T): P extends null ? T : P & T {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\nimport {ChartArea} from '../../types';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates B\u00E9zier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import {ChartArea, Scale} from '../../types';\nimport Chart from '../core/core.controller';\nimport {ChartEvent} from '../types';\nimport {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point} from '../../types/geometric';\nimport type {SplinePoint} from './helpers.curve';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, \uD835\uDF03) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],
  "mappings": "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",
  "names": []
}
